image: docker:latest


before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY


stages:
  - build
  - deploy

variables:
  IMAGE_FRONTEND: ${CI_REGISTRY}/${CI_REGISTRY_USER}/front_green_ui

#prod-build:
#  stage: build
#  script:
#    - docker build -f Dockerfile -t ${IMAGE_FRONTEND}:${CI_COMMIT_SHA} .
#    - docker tag ${IMAGE_FRONTEND}:${CI_COMMIT_SHA} ${IMAGE_FRONTEND}:latest
#    - docker push ${IMAGE_FRONTEND}:${CI_COMMIT_SHA}
#    - docker push ${IMAGE_FRONTEND}:latest
#  only:
#    - release

#prod-deploy:
#  image: buffalobill571/alpine-ssh-pip-fabric:v0.1.0
#  stage: deploy
#  script:
#    - fab prod deploy
#  before_script:
#    - eval $(ssh-agen -s)
#    - mkdir -p ~/.ssh
#    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
#  only:
#    - release


test-build:
  stage: build
  script:
    - docker build -f Dockerfile -t ${IMAGE_FRONTEND}:${CI_COMMIT_SHA} .
    - docker tag ${IMAGE_FRONTEND}:${CI_COMMIT_SHA} ${IMAGE_FRONTEND}:test-latest
    - docker push ${IMAGE_FRONTEND}:${CI_COMMIT_SHA}
    - docker push ${IMAGE_FRONTEND}:test-latest
  only:
    - test

test-deploy:
  image: buffalobill571/alpine-ssh-pip-fabric:v0.1.0
  stage: deploy
  script:
    - fab test deploy
  before_script:
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  only:
    - test
